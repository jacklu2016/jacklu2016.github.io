<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>推荐系统的检索评分重排名</title>
      <link href="/2020/03/28/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A3%80%E7%B4%A2%E8%AF%84%E5%88%86%E9%87%8D%E6%8E%92%E5%90%8D/"/>
      <url>/2020/03/28/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A3%80%E7%B4%A2%E8%AF%84%E5%88%86%E9%87%8D%E6%8E%92%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="检索"><a href="#检索" class="headerlink" title="检索"></a>检索</h1><p><b>假设你有一个embeding模型，给定一个用户，你怎么决定推荐哪一个物品给他？</b></p><p>在服务时，给定一个query，你会开始做下面的一种</p><ul><li>如果是一个矩阵因子分解模型，query或者user的embedding是固定知道的，系统可以很轻易的在user embedding矩阵中检索到。</li><li>如果是一个深度神经网络模型，系统需要在服务时，对特征向量x运行神经网络来计算query embedding φ(x)</li></ul><p>一旦你有了query embedding q,你就可以在embedding空间中查找和q接近的物品embedding V(j)。这是一个最近邻的问题，例如，你能根据相似度评分s(q,V(j))来返回top k个物品。<br><img src="20200328054448583.png" alt=""><br>你也可以使用相同方法来得到关联物品的推荐。例如，当用户在youtube上观看一个视频，系统首先查找这个视频的embedding，然后在embedding 空间中查找跟这个embedding接近的物品的embeddings。<br>为了在embedding空间中计算最近的邻居，系统可以穷尽的计算每一个潜在候选者的评分。但是在大型组织中穷尽计算的代价比较高，你可以使用下面策略中的一种使得模型计算更高效</p><ul><li>如果query embedding是固定的，系统可以线下执行穷尽评分，预先计算并为每一个query保存一个top的候选者列表。这是相关物品推荐中常用的方法。</li><li>使用近似近邻(approximate nearest neighbors)</li></ul><h1 id="评分"><a href="#评分" class="headerlink" title="评分"></a>评分</h1><p>在生产候选者后，另一个模型就会对选取到的一组候选物品进行评分、排名然后展示。推荐系统可能有不同来源的多个候选者生成器，如下：</p><ul><li>来自矩阵因子分解的相关物品</li><li>解释个性的用户特征</li><li>“本地” vs “遥远”的物品，要考虑地理位置信息</li><li>流行或趋势好的物品</li><li>一个社交网络图，朋友喜欢的或推荐的物品</li></ul><p>系统把不同来源的合并为一个通用的候选者物品池，然后用一个模型来对池中的物品进行评分，然后根据评分进行排名。例如，只要给定下面两个信息，系统就可以训练一个模型来预测youtube上一个用户观看一个视频的可能性，这2个信息是：</p><ul><li>query特征（例如，用户观看历史，语言。国家，时间）</li><li>视频特征(例如，标题、标签、视频embedding)</li></ul><p>系统就能根据模型预测的候选者池中的视频进行排名。</p><h2 id="为什么不让候选者生成器来评分"><a href="#为什么不让候选者生成器来评分" class="headerlink" title="为什么不让候选者生成器来评分"></a>为什么不让候选者生成器来评分</h2><p>虽然候选者生成器计算了一个评分(例如在embedding空间中计算相似度量)，你可以临时的使用这个评分来进行排序。但是，实践中，你应该避免这么做，因为：</p><ul><li>一些系统依赖于多个候选者生成器，可能不同生成器的评分是不可比较的。</li><li>在一个小的候选者池中，系统可以提供更多的特征和更复杂的模型来更好的捕捉上下文</li></ul><h2 id="给评分选择一个目标函数"><a href="#给评分选择一个目标函数" class="headerlink" title="给评分选择一个目标函数"></a>给评分选择一个目标函数</h2><p>你也许会记得<a href="https://developers.google.com/machine-learning/problem-framing/" target="_blank" rel="noopener">机器学习问题的介绍</a>,机器学习能扮演为一个淘气的精灵：很乐意去学习你提供的目标，但是你得非常小心你的期望。这个淘气的特性也同样应用于推荐系统，评分函数的选择能极大的影响物品的排名，最后影响推荐系统的质量。</p><p><b>例如，使用不同的目标带来不同的结果：</b></p><h3 id="最大化点击率"><a href="#最大化点击率" class="headerlink" title="最大化点击率"></a>最大化点击率</h3><p>如果一个评分函数为了优化点击，系统就会推荐点击诱饵的视频，这个评分函数能带来点击，但是没有带来一个好的用户体检。用户的性能会衰减很快。</p><h3 id="最大化观看时间"><a href="#最大化观看时间" class="headerlink" title="最大化观看时间"></a>最大化观看时间</h3><p>如果评分函数是为了优化观看时间，系统可能会推荐时间很长的视频，这也会导致一个不好的用户体检。注意很多短的视频和那些长的视频一样好。</p><h3 id="增加多样性并最大化会话观看时间"><a href="#增加多样性并最大化会话观看时间" class="headerlink" title="增加多样性并最大化会话观看时间"></a>增加多样性并最大化会话观看时间</h3><p>推荐更短的视频，但是这些视频能让用户保持被吸引。</p><h2 id="评分中的位置偏差"><a href="#评分中的位置偏差" class="headerlink" title="评分中的位置偏差"></a>评分中的位置偏差</h2><p><img src="20200328063925371.png" alt=""><br>出现在屏幕下方的物品比出现在屏幕上方的物品的点击率要低。通常系统在对物品进行评分时不知道物品会出现在屏幕的什么位置。但是在模型中查询所有位置的代价又太大。假使对多个位置查询是可行的，系统也很难在跨多评分排名中找到一致性的排名。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ul><li>生成位置独立的排名</li><li>把所有的候选物品看做是在第一个位置来进行排名</li></ul><h1 id="重排名"><a href="#重排名" class="headerlink" title="重排名"></a>重排名</h1><p>在推荐系统的最后阶段，系统能考虑到额外的条件和约束对候选物品进行重排序。一个重排名的方法是通过过滤来删除一些候选物品。<br>例如：你能通过一下操作来实现视频推荐上的重排名</p><ul><li>你可以训练单独的模型来检查一个视频是否是点击诱饵</li><li>在候选物品列表上执行这个模型</li><li>删除模型分类为点击诱饵的视频</li></ul><p>另一个重排名方法是对排名器返回的评分进行手动转换<br>例如：通过下面的函数改变评分来对视频重排名</p><ul><li>视频年龄(可能提升新鲜的内容)</li><li>视频长度</li></ul><p>这个部分我们简要的介绍新鲜度、多样性、公平性。这些因子能帮助改善你的推荐系统。这其中的因子需要修改处理过程中的不同阶段。下面每个部分提供了你可以单独或组合使用的解决办法。</p><h2 id="新鲜度"><a href="#新鲜度" class="headerlink" title="新鲜度"></a>新鲜度</h2><p>很多推荐系统都会使用当前用户的历史、最新的物品这些最新的可用信息。保持模型的新鲜度来帮助模型做出更好的推荐。</p><h3 id="解决方案Solutions"><a href="#解决方案Solutions" class="headerlink" title="解决方案Solutions"></a>解决方案Solutions</h3><ul><li>尽可能的经常在最新的训练数据上重新训练模型，我们推荐热启动来训练，这样就能避免模型胡乱的全部重新学习。热启动能显著的减少训练时间。例如，在矩阵因子分解中，热启动那些在上一个模型实例中已存在的物品embeddings。</li><li>在矩阵因子分解模型中创建一个“平均”用户来代表新用户。你不需要每个用户相同的embedding，只需要基于用户的特征来创建用户集群。</li><li>使用softmax深度神经网络或双塔神经网络，因为模型使用特征向量作为输入，所以它也能运行一个在训练时没有出现过的query或者item。</li><li>增加文档年龄这一个特征。例如，youtube能把视频的年龄和上一次观看的时间当做特征增加到模型中。</li></ul><h2 id="多样性"><a href="#多样性" class="headerlink" title="多样性"></a>多样性</h2><p><img src="20200328084108597.png" alt=""><br>如果系统总是推荐和query embedding最接近的视频，候选物品之间会非常相似。这种缺乏多样性会导致坏的或令人厌烦的用户体检。例如，如果youtube只推荐和用户当前观看的视频相类似的视频，除了猫头鹰视频没有其它的了（就像上图展示的那样），用户很快就会失去兴趣。</p><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><ul><li>使用不同的来源训练多个候选生成器</li><li>使用不同的目标函数训练多个排名</li><li>基于分类或其它元数据重新对物品排名来确保多样性</li></ul><h2 id="公平性"><a href="#公平性" class="headerlink" title="公平性"></a>公平性</h2><p>你的模型应该平等的对待所有的用户。因此，确保你的模型不会从训练数据集中学习到非有意识的偏见。</p><h3 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h3><ul><li>在设计和开发时包含多个方面特征</li><li>在全面的数据集上训练机器学习模型。当你的数据很稀疏时增加辅助的数据(例如，当特定的类型人数不足时)。</li><li>对每一个人口统计类型上跟踪度量(例如准确性和绝对误差)来观察偏差(biase)。</li><li>为服务不周到的群体使用单独的模型。</li></ul><p>本文翻译自谷歌开发者<a href="https://developers.google.com/machine-learning/recommendation/dnn/retrieval" target="_blank" rel="noopener">推荐系统的检索评分重排名</a></p>]]></content>
      
      
      <categories>
          
          <category> 推荐系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度神经网络推荐系统</title>
      <link href="/2020/03/28/%E6%B7%B1%E5%BA%A6%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/03/28/%E6%B7%B1%E5%BA%A6%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="深度神经网络推荐模型"><a href="#深度神经网络推荐模型" class="headerlink" title="深度神经网络推荐模型"></a>深度神经网络推荐模型</h1><p>上一篇文章已向你展示了使用矩阵因子分解来学习embeddings。矩阵因子分解的局限性：</p><ul><li>很难使用边缘特征(side feature，就是query id和item id之外的特征)。这个模型只能根据训练数据集中的用户或物品进行推荐。</li><li>推荐的相关性。在矩阵因子分解的<a href="https://developers.google.com/machine-learning/recommendation/labs/movie-rec-programming-exercise" target="_blank" rel="noopener">实验</a>中，模型会给每个人推荐流行的物品，特别是使用点积作为相似度量。但是模型应该最好是能捕捉用户的兴趣。</li></ul><p>深度神经网络能很好的避免矩阵因子分解的这些局限性。深度神经网络能很轻松的合并用户特征和物品特征(因为神经网络输入层的灵活性)，这就能帮助发现用户的兴趣，进而提高推荐的相关性。</p><h2 id="Softmax深度神经网络的推荐"><a href="#Softmax深度神经网络的推荐" class="headerlink" title="Softmax深度神经网络的推荐"></a>Softmax深度神经网络的推荐</h2><p>一个可行的深度神经网络模型是<a href="https://developers.google.com/machine-learning/glossary#softmax" target="_blank" rel="noopener">softmax</a>(softmax是一个函数，这个函数能在多类型分类模型中，预测每一个类型的可能性)<br>这个模型把推荐的问题当做一个多分类预测的问题：</p><ul><li>输入是一个用户</li><li>输出是一个可能性的向量，这个向量的长度是企业内所有物品的数量，这个向量就表示每种物品的可能性，例如，点击或观看youtube视频的可能性。<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3>深度神经网络的输入能包含：</li><li>稠密特征(例如，观看时间和自上次观看以来的时间)</li><li>稀疏特征(例如，观看历史和国家)</li></ul><p>不像矩阵因子分解模型，这个模型你能增加像年龄、国家这样的边缘特征。我们把输入的向量定义为x<br><img src="20200328110332448.png" alt=""></p><h3 id="模型架构"><a href="#模型架构" class="headerlink" title="模型架构"></a>模型架构</h3><p>模型的架构决定了模型的复杂性和可表达性。通过增加隐藏层和非线性的激活函数(例如Relu)，模型能捕捉数据中更加复杂的关系。但是增加参数的数量会使得模型更难训练而且使用模型的成本更高。我们把最后一个隐藏层的输出定义为<img src="20200328110850384.png" alt=""><br><img src="20200328110915151.png" alt=""></p><h3 id="Softmax输出，预测分布的可能性"><a href="#Softmax输出，预测分布的可能性" class="headerlink" title="Softmax输出，预测分布的可能性"></a>Softmax输出，预测分布的可能性</h3><p><img src="20200328111117934.png" alt=""><br>模型通过一个softmax层把最后一层的输出φ(x)映射为分布的可能性，其中</p><ul><li>h是softmax函数</li><li>V(n*d)是softmax层的权重矩阵<br>softmax层把评分的向量y(有时也被称为<a href="https://developers.google.com/machine-learning/glossary/#logits" target="_blank" rel="noopener">logits</a>)映射为分布的可能性。<br><img src="20200328111944223.png" alt=""><h4 id="你知道吗？"><a href="#你知道吗？" class="headerlink" title="你知道吗？"></a>你知道吗？</h4>softmax是取一个词语的诙谐表示，一个”硬”最大是把物品得分最高的y(i)赋值为可能性1，相反，这个”软”最大是为所有物品分配一个非0的可能性，物品拥有更高的分数就代表更高的可能性。如果这个分数放大，softmax函数把硬最大收敛为无穷大。<h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3>最后，我们定义个损失函数来比较以下两项：</li><li>p^，softmax层的输出(分布的可能性) </li><li>p，真实值，表示这个用户和这个物品的交互（例如，youtube上面用户观看或点击的视频）。这能通过一个multi-hot分布(可能性的向量)来表示。<br><img src="20200328113425962.png" alt=""><h3 id="Softmax-Embeddings"><a href="#Softmax-Embeddings" class="headerlink" title="Softmax Embeddings"></a>Softmax Embeddings</h3><img src="20200328113743036.png" alt=""><br>物品j的可能性通过如上公式计算得出，Z是一个标准化使用的常量，它不依赖于j。换句话说，log(p^j)一个物品的可能性的log值是两个d维向量的点击，这两个d维的向量也可以表示为用户和物品的embeddings</li><li>φ(x)∈R(D)是最后一个隐藏层的输出，我们把它省委query x的embedding</li><li>V(j)∈R(d)是连接最后一个隐藏层到输出j的权重向量，我们把它称为物品j的embedding。<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4>因为log是一个增函数，拥有最高可能性p^(j)的物品j就是最大点积&lt;φ(x),V(j)&gt;的物品。因此，在这个embedding空间中，点积也可以解释为相似度量。<br><img src="20200328114812895.png" alt=""><h2 id="深度神经网络和矩阵因子分解"><a href="#深度神经网络和矩阵因子分解" class="headerlink" title="深度神经网络和矩阵因子分解"></a>深度神经网络和矩阵因子分解</h2>在softmax模型和矩阵因子分解模型中，系统为每一个item j都学习到一个embedding向量V(j)，矩阵因子分解模型中的物品embedding矩阵V∈R(n*d)在深度神经网络中是<br>softmax层的权重矩阵。</li></ul><p>query embedding则是不同的。深度神经网络没有为每个query i学习一个embedding U(i)，而是学习了一个query特征x到embedding φ(x)∈R(d)的映射。因此可以认为深度神经网络模型是一个更加一般化的矩阵因子分解，这个模型把query替换为一个非线性的函数φ(.)。</p><h2 id="你能使用物品的特征吗？"><a href="#你能使用物品的特征吗？" class="headerlink" title="你能使用物品的特征吗？"></a>你能使用物品的特征吗？</h2><p>我们能在物品上应用相同的思想吗？就是说这个模型不为每个物品学习一个embedding，而是学习一个非线性函数，这个函数把物品特征映射为一个embedding？答案是有。我们使用一个双塔(two-tower)神经网络，它由两个神经网络组成<br><img src="20200328025943254.png" alt=""></p><ul><li>一个神经网络把query 特征映射为query embedding</li><li>一个神经网络把item特征映射为item embedding<br>模型的输出可以定义为query embedding和item embedding的点积。注意,这不再是一个softmax模型。这个模型为每一query和item对预测一个值，而不是为query预测一个可能性向量。</li></ul><h1 id="Softmax-Training"><a href="#Softmax-Training" class="headerlink" title="Softmax Training"></a>Softmax Training</h1><p>上一节介绍了怎么在一个推荐系统的深度神经网络中使用softmax层。这节我们来仔细看看这个系统的训练数据。</p><h2 id="训练数据"><a href="#训练数据" class="headerlink" title="训练数据"></a>训练数据</h2><p>softmax训练数据由query特征x以及和用户交互的物品向量（表示为可能性分布p）。在下图中他们被标记为蓝色。这个模型中的变量是不同层的权重，他们在下图中被标记为橙色。这个模型能使用任何类型的随机梯度下降的方法训练。<br><img src="20200328031029330.png" alt=""></p><h2 id="negative-sampling"><a href="#negative-sampling" class="headerlink" title="negative sampling"></a>negative sampling</h2><p>因为损失函数是比较两个可能性数组p,p^(x)∈R(n)（他们分别是真实值和模型的输出）。当n非常大的情况下，为一个query x计算梯度损失x的代价是非常高的。</p><p>我们当然可以建立一个系统只计算那些正向物品(positive item，在向量中处于活动的物品，跟用户有交互的物品)的梯度。但是，如果系统只计算positive物品，那么系统就会遭遇折叠的困境，什么是折叠的困境：<br><img src="20200328032454658.png" alt=""><br>在上图中，我们假设不同的颜色代表不同种类的query和item。每个query(表示为方形)最可能和同种颜色的item(表示为圆形)交互。例如，我们假设分类就是youbute中不同的语言，一个特定的用户只会和这个特定语言的视频交互。<br>这个模型能学习到在同一个颜色中如何摆放相互之间有关系的query或item。(能正确捕捉到同一颜色内的相似性)，但是来自不同颜色的embedding可能最后被放入同一个embedding空间的区域中。这种现象被称为折叠，会导致假的推荐：就是在一个query时刻，模型会错误的推荐一个其它组中的高分item。<br>反向例子(negative examples)就是和一个给定的query不相关的item。在模型训练时输入一些反向的例子能使模型学习到来自不同组的embedding会彼此互相分离开。<br>我们不是对所有的物品都计算梯度(这样代价太大)，也不是只对正向样本计算梯度(这会导致模型折叠)，你可以使用负向样本抽样(negative sampling)。更准确的说，我们只对下面的物品计算对应的梯度：</p><ul><li>所有正面的item，(被标记为1的物品)</li><li>负面item的抽样(j in 1,…,n)<br>这里有不同的负面抽样策略</li><li>一致性抽样</li><li>你可以给有更高分数的φ(x).V(j)对应的物品j更大的可能性，直觉的认为，这些是在梯度中贡献更大的一组物品，这些物品通常被称为硬反面(hard negative)。</li><li><h3 id="额外的资源"><a href="#额外的资源" class="headerlink" title="额外的资源:"></a>额外的资源:</h3>为了更好的理解这个技术、架构和youtube中使用的模型，<br>查看<a href="https://research.google.com/pubs/pub45530.html" target="_blank" rel="noopener">Neural Networks for YouTube Recommendations</a></li></ul><p>了解折叠的更多细节看<br><a href="https://dl.acm.org/citation.cfm?id=3109911" target="_blank" rel="noopener">Xin et al., Folding: Why Good Models Sometimes Make Spurious Recommendations</a> </p><p>学习更多关于负面抽样，看<a href="https://ieeexplore.ieee.org/document/4443871/" target="_blank" rel="noopener">Bengio and Senecal, Adaptive Importance Sampling to Accelerate Training of a Neural Probabilistic Language Model</a></p><h1 id="矩阵因子分解-Vs-Softmax"><a href="#矩阵因子分解-Vs-Softmax" class="headerlink" title="矩阵因子分解 Vs Softmax"></a>矩阵因子分解 Vs Softmax</h1><p>Softmax能避免矩阵因子分解中很多的局限性，但是也更难以训练和查询。下面表格总结了两种模型重要的区别</p><div class="table-container"><table><thead><tr><th></th><th>矩阵因子分解</th><th>深度神经网络Softmax</th></tr></thead><tbody><tr><td>查询特征</td><td><font color=red>不容易包含</font></td><td><font color=green>能被包含</font></td></tr><tr><td>冷启动</td><td><font color=red>不能方面处理训练集之外的query和物品。<br>一些启发式的方法可以使用(例如：对于一个新的query，可以取相似query embedding的均值)</font></td><td><font color=green>处理新query很简单</font></td></tr><tr><td>折叠</td><td><font color=green>通过把未观察的权重放入WALS中轻易解决折叠的问题</font></td><td><font color=red>证明会发生折叠，可以使用反面抽样或Gravity的技术</font></td></tr><tr><td>训练扩展</td><td><font color=green>轻易扩展到大型组织(上亿级的物品甚至更多)<br>仅限输入是稀疏的矩阵</font></td><td><font color=red>很难扩展到大型组织。也可以使用一些技术，如：哈希、反面抽样等</font></td></tr><tr><td>服务应用扩展</td><td><font color=green>U、V的embedding是固定的，可以预计算一组候选者并保存</font></td><td><font color=green>物品embeding V是固定的。</font><br><font color=red>query的embedding需要在查询时计算，使得模型服务应用的代价更高</font></td></tr></tbody></table></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>矩阵因子分解是大公司更好的选择，它能轻易的扩展，查询代价低，不会产生折叠。</li><li>深度神经网络能更好捕捉兴趣，但是更难训练和query代价高。如果是为了评分，那么优先使用深度神经网络而不是矩阵因子分解。因为深度神经网络模型能使用更多的特征来更好的捕捉相关性。同时，通常深度神经网络模型产生的折叠是可以被接受的，因为你更关注那些被认为是预先过滤的一组相关的候选者的排名。</li></ul><p>本文翻译自谷歌开发者<a href="https://developers.google.com/machine-learning/recommendation/dnn/softmax" target="_blank" rel="noopener">使用深度神经网络推荐</a></p>]]></content>
      
      
      <categories>
          
          <category> 推荐系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐系统 </tag>
            
            <tag> 深度神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐系统-协同过滤和矩阵因子分解</title>
      <link href="/2020/03/12/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F-%E5%8D%8F%E5%90%8C%E8%BF%87%E6%BB%A4%E5%92%8C%E7%9F%A9%E9%98%B5%E5%9B%A0%E5%AD%90%E5%88%86%E8%A7%A3/"/>
      <url>/2020/03/12/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F-%E5%8D%8F%E5%90%8C%E8%BF%87%E6%BB%A4%E5%92%8C%E7%9F%A9%E9%98%B5%E5%9B%A0%E5%AD%90%E5%88%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="协同过滤"><a href="#协同过滤" class="headerlink" title="协同过滤"></a>协同过滤</h1><p>为了解决基于内容过滤的局限性，协同过滤同时使用用户之间相似和物品之间的相似来推荐。这能做到意外的推荐；因为协同过滤模型能根据和用户A类似的用户B的兴趣来给A推荐物品。此外，embeddings(怎么翻译都不好)能够被自动学习到，不依赖于手工进行特征工程。</p><h2 id="一个电影推荐示例"><a href="#一个电影推荐示例" class="headerlink" title="一个电影推荐示例"></a>一个电影推荐示例</h2><p>一个电影推荐系统的训练数据集是由一个反馈矩阵组成，这个矩阵：<br></p><ul><li>每一行表示一个用户<br></li><li>每一列表示一个物品(电影)<br><br>关于电影的反馈有两种类型</li><li>显式— 用户通过一个数字评分来表示对一个特定电影的喜爱程度</li><li>隐式— 如果一个用户观看了一个电影，系统推断用户对这个电影感兴趣<br><br>如果用户访问主页，系统就应该同时根据下面两点给出推荐</li><li>和用户过去喜欢的电影相类似的电影</li><li>和用户类似的用户喜欢的电影<br><br>为了方便解释，我们在下面的表格中为每个电影手工创建了特征<br></li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">电影</th><th style="text-align:right">评分</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:left">The Dark Knight Rises</td><td style="text-align:right">PG-13</td><td style="text-align:center">Batman endeavors to save Gotham City from nuclear annihilation in this sequel to The Dark Knight, set in the DC Comics universe.</td></tr><tr><td style="text-align:left">Harry Potter and the Sorcerer’s Stone</td><td style="text-align:right">PG</td><td style="text-align:center">A orphaned boy discovers he is a wizard and enrolls in Hogwarts School of Witchcraft and Wizardry, where he wages his first battle against the evil Lord Voldemort.</td></tr><tr><td style="text-align:left">怪物史莱克</td><td style="text-align:right">PG</td><td style="text-align:center">一个可爱的食人魔和他的驴伙伴出发去营救菲奥娜公主，她在她的城堡里被一条龙报复。</td></tr><tr><td style="text-align:left">The Triplets of Belleville</td><td style="text-align:right">PG-13</td><td style="text-align:center">When professional cycler Champion is kidnapped during the Tour de France, his grandmother and overweight dog journey overseas to rescue him, with the help of a trio of elderly jazz singers.</td></tr><tr><td style="text-align:left">Memento</td><td style="text-align:right">R</td><td style="text-align:center">An amnesiac desperately seeks to solve his wife’s murder by tattooing clues onto his body.</td></tr></tbody></table></div><h3 id="1D-1维-Embdding"><a href="#1D-1维-Embdding" class="headerlink" title="1D(1维) Embdding"></a>1D(1维) Embdding</h3><p>假设我们给每个电影赋一个[-1,1]的值来描述这个电影是适合儿童(-1)还是成人(1)。同时我们给每个用户赋一个[-1,1]的值来描述这个用户是喜欢儿童电影(接近-1)还是成人电影(接近+1)。<br><img src="20200312112459415.png" alt=""><br>下图中，绿色勾代表这个用户看过对应的电影，第3个和第4个用户的爱好能很好的通过这个特征来表示-第3个用户喜欢儿童电影，第4个用户喜欢成人电影(只是翻译，不要想歪了)。但是第1个和第2个用户的爱好不能通过这种单个特征来表示。<br><img src="20200312112701892.png" alt=""></p><h3 id="2D-2维-Embedding"><a href="#2D-2维-Embedding" class="headerlink" title="2D(2维)Embedding"></a>2D(2维)Embedding</h3><p>一个特征不足以表示所有用户的偏好。为了解决这个问题，我们增加一个特征，一个表示大片或者艺术电影的程度。有了这第二个特征，我们能使用下面的二维embedding来表示每一个电影。<br><img src="20200313093230938.png" alt=""><br>我们同样把用户放入相同的embedding空间中来表示反馈矩阵：每一用户、物品对，我们希望当用户看了该电影时，用户embedding和物品embedding的点积接近1，没看则点积接近0。<br><img src="20200313094133795.png" alt=""></p><p><b>注意：</b>我们使用相同的embedding空间来表示用户和物品。这看起来很奇怪。毕竟用户和物品是不同的实体。但是你可以认为这个embedding空间是用户和物品的共性的一种抽象表示，这样我们就可以使用相似度量来衡量相似度或相关性。</p><p>在这个例子中，我们使用手工创建的embedding。但是实际上，embedding能被自动学习，这就是协同过滤的能力。在下面2节中，我们会讨论用不同的模型来学习并训练embedding。</p><p>当模型学习embeddings时，这种协同的方法是很显然的。假设电影的embedding向量是固定的，然后模型就能学习到能最佳表示用户偏好的embedding向量。因此，用户的embedding越相似表名他们更偏好更接近。同样的，如果用户的embedding向量是固定的，我们也可以学习电影的embedding来很好的表示反馈矩阵。结果就是，被相似用户喜欢的电影的embedding在embedding空间也更接近。</p><h2 id="检查下你是否理解了"><a href="#检查下你是否理解了" class="headerlink" title="检查下你是否理解了"></a>检查下你是否理解了</h2><p>一个模型推荐一个购物app给用户，因为这个用户最近安装了一个类似的app。这个例子是一个什么过滤？</p><ul><li><p>1、基于内容的的过滤</p><p>  答案正确。基于内容的的过滤不考虑其他用户。</p></li><li>2、协同过滤<br>  答案错误，协同过滤考虑到其他用户，这个场景中，我们只考虑了一个用户。</li></ul><h1 id="矩阵因子分解"><a href="#矩阵因子分解" class="headerlink" title="矩阵因子分解"></a>矩阵因子分解</h1><p>矩阵因子分解是一个简单的embedding模型。给定一个反馈矩阵<br><img src="20200313104038917.png" alt="">,m表示用户的数量，n表示物品的数量。这个模型能学习到：</p><ul><li>一个用户embedding 矩阵<img src="20200313104316183.png" alt="">，第i行表示用户i的embedding</li><li>一个物品embedding矩阵<img src="20200313104330698.png" alt="">，第j列表示物品j的embedding<br><img src="20200313105433589.png" alt=""><br><img src="20200313104657006.png" alt=""><br>学习到的embedding使得U和V两个矩阵的乘积能非常接近反馈矩阵A。注意到矩阵U和矩阵V乘积的每个实体(i,j)就是用户i的embedding和物品j的embedding的点积。你希望这个点积和A(i,j)更接近。<br>注意：矩阵因子化代表性的给出了一个更加简洁的表示而不是学习整个矩阵。完整的矩阵是O(m*n)个实体，而embedding矩阵U和V只有O((m+n)d)个实体，d是embedding的维度，embedding维度d是远小于m和n的。因此，矩阵因子分解能学习数据的因此结构特征，可以认为是一个低维空间的观察。在前面的例子中，m，n，d的值都非常小，这个优势可以忽略。但是在实际的推荐系统中，矩阵因子分解是比学习整个矩阵要极度简化。</li></ul><h2 id="选择目标函数"><a href="#选择目标函数" class="headerlink" title="选择目标函数"></a>选择目标函数</h2><p>一个最直观的目标函数就是平方距离。就是最小化所有观察条目对的平方差之和。<br><img src="20200317081901374.png" alt=""><br>在这个目标函数中，你只对那些反馈矩阵中不为0的观察对象(i,j)进行平方差求和。但是，仅对值为1的求和不是一个好办法，因为所有值为1的会有最小的损失(loss)，也会导致生成的模型不能进行有效的推荐且不具备一般性的模型。<br><img src="20200317082943563.png" alt=""><br>你也可以把那些没有观察到的值也就是用户没有进行评分的值当做0处理，然后对矩阵中所有的单元格进行求平方差的和。这也就是最小化矩阵A和UV^T之间最小的平方 Frobenius距离。<br><img src="20200317083958787.png" alt=""><br>你可以通过奇异值分解来解决矩阵的二次方程的问题。但是，奇异值分解(svd)也不是一个好的方案。因为在实际的应用中，矩阵A可能会很稀疏，例如，一个用户在youtube上看的所有视频相比youtube上所有视频总数来说是非常的少。解决方案<img src="20200317084542521.png" alt="">(对应到输入的评分矩阵)会接近于0，也会导致模型的性能很差。<br>相反，权重的矩阵因子分解把目标分解为下面2个求和项</p><ul><li>所有观察值(有用户评分)的求和</li><li>所有未观察的值求和(当做0处理)<br><img src="20200317084916379.png" alt=""><br>这里，W0是一个超参数，控制公式中的两个term(有评分的求和无评分的求和)权重，保证目标不为被任何一个term主宰。调整这个超参数非常的重要。<br>Note：在实际的应用中，你需要小心设置观察值的权重。例如，频繁的物品（youtube中非常流行的video视频）或者高频访问的用户会主导并控制了这个目标函数。我们可以通过设置训练数据集的权重来表达物品的频繁度，从而纠正这个问题。换句话说，你可以把目标函数替换为：<br><img src="20200317091457488.png" alt=""><br>其中w(i,j)是用户i和物品j的频繁度的函数。<h2 id="最小化目标函数"><a href="#最小化目标函数" class="headerlink" title="最小化目标函数"></a>最小化目标函数</h2>比较流行的最小化目标函数的算法有</li><li>随机梯度下降SVD是最小化损失函数的通用方法</li><li>交替最小二乘法Weighted Alternating Least Squares (WALS)是专门为这类目标设计</li></ul><p>这个目标在两个矩阵U和V中都是二次方程式的（Note, however, that the problem is not jointly convex这个我也不懂）交替最小二乘法WALS通过随机初始化embeddings，然后交替下面两项</p><ul><li>固定U，然后求解V</li><li>固定V，然后求解U</li></ul><p>每一个阶段都能被完全解决(通过线性系统方案)并且能分布式执行。因为每一步都能降低loss损失，所以这个技术能保证目标收敛。</p><h3 id="SGD-VS-WALS"><a href="#SGD-VS-WALS" class="headerlink" title="SGD VS. WALS"></a>SGD VS. WALS</h3><p>SGD随机梯度下降和WALS交替最小二乘法都有优势和劣势。下面是他们之间比较</p><p>SGD</p><ul><li><font color=green>非常灵活，能应用于其它的损失函数</font></li><li><font color=green>能够并行</font></li><li><font color=red>很慢，不能很快的收敛</font></li><li><font color=red>很难处理那些未观察的值(need to use negative sampling or gravity)</font></li></ul><p>WALS</p><ul><li><font color=red>依赖于方差损失</font></li><li><font color=green>能够并行化</font></li><li><font color=green>比SGD更快收敛</font></li><li><font color=green>很容易处理未观察的值</font></li></ul><h1 id="优势和劣势"><a href="#优势和劣势" class="headerlink" title="优势和劣势"></a>优势和劣势</h1><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><h3 id="不需要领域知识"><a href="#不需要领域知识" class="headerlink" title="不需要领域知识"></a><font color=green>不需要领域知识</font></h3><p>我们不需要领域知识， 因为embeddings能被自动学习到</p><h3 id="意外发现（Serendipity）"><a href="#意外发现（Serendipity）" class="headerlink" title="意外发现（Serendipity）"></a><font color=green>意外发现（Serendipity）</font></h3><p>模型能帮助用户发现新的兴趣。在互相隔离的情况下，机器学习系统可能不知道用户对某一个物品感兴趣，但是依然会推荐它，因为相似的用户对这个物品感兴趣。</p><h3 id="一个很好的起点-Great-Starting-point"><a href="#一个很好的起点-Great-Starting-point" class="headerlink" title="一个很好的起点(Great Starting point)"></a><font color=green>一个很好的起点(Great Starting point)</font></h3><p>某种程度上，这个系统只需要用户反馈矩阵就可以训练矩阵因子分解模型。特别的，系统也不需要上下文特征。实践中，这是多种推荐物品候选生成器的一种。</p><h2 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h2><h3 id="不能处理新物品"><a href="#不能处理新物品" class="headerlink" title="不能处理新物品"></a><font color=red>不能处理新物品</font></h3><p>预测这个模型中的一个用户、物品对就是他们对应的embeddings的点积。如果在训练时都没有这个物品，那么就不能为这个物品生产embedding，也就不能为用户推荐这个物品。这个问题通常被称为冷启动问题。但是，下面的技术能在某种程度上解决这个问题</p><ul><li><b>Projection in WALS</b> .如果一个新的item没有模型训练中出现，假设系统中有用户和这个物品有交互，那么不需要重新训练整个模型也可以轻松的给这个物品计算embedding <img src="20200317101820646.png" alt="">。系统只需要计算下面的等式或者一个加权重的版本<br><img src="20200317101913467.png" alt=""><br>上面的等式对应WALS中的一次迭代：用户的embeddings保持固定，系统求解物品i(0)的embedding，对于新的用户也可以使用相同的方法来解决。</li><li><b>为新物品启发式的生成embeddings（Heuristics to generate embeddings of fresh items）</b>如果系统中没有用户和这个新物品交互，那么系统会取一些物品的embeddings的均值。这些物品和新物品是属于同一类型，同一上传者(在youtube),其它以此类推。<h3 id="很难为用户或物品包含侧面特征-Hard-to-include-side-features-for-query-item"><a href="#很难为用户或物品包含侧面特征-Hard-to-include-side-features-for-query-item" class="headerlink" title="很难为用户或物品包含侧面特征(Hard to include side features for query/item)"></a><font color=red>很难为用户或物品包含侧面特征(Hard to include side features for query/item)</font></h3><b>Side Feature</b>侧面特征就是超出用户和物品之外的特征。对电影推荐来说，侧面工程可能包含国家、年龄。包含已存在的侧面特征能提升模型的质量。但是，在WALS中添加侧面特征可并不简单。一个一般化的交替最小二乘WALS使得这成为可能。<br>为了一般化交替最小二乘WALS，我们需要定义一个块矩阵A，其中</li><li>Block (0, 0) is the original feedback matrix .块(0,0)是原始反馈矩阵</li><li>Block (0, 1) is a multi-hot encoding of the user features.</li><li>Block (1, 0) is a multi-hot encoding of the item features.<br>注意：Block (1, 1)通常被置空。如果你对反馈矩阵A应用矩阵因子分解，那么系统除了会学习用户和物品的embedding，也会学习侧面特征的embedding。</li></ul><hr><p>本文翻译自谷歌开发者文档：<a href="https://developers.google.com/machine-learning/recommendation/collaborative/basics" target="_blank" rel="noopener">Collaborative Filtering and Matrix Factorization</a></p>]]></content>
      
      
      <categories>
          
          <category> 推荐系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 协同过滤 </tag>
            
            <tag> 矩阵因子分解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于内容的推荐系统</title>
      <link href="/2020/03/12/%E5%9F%BA%E4%BA%8E%E5%86%85%E5%AE%B9%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/03/12/%E5%9F%BA%E4%BA%8E%E5%86%85%E5%AE%B9%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="Content-base-Filtering"><a href="#Content-base-Filtering" class="headerlink" title="Content-base Filtering"></a>Content-base Filtering</h1><h2 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h2><p>基于内容过滤通过基于用户之前的行为actions或者隐式反馈，根据物品特征推荐给用户喜爱的类似物品。为了展示基于内容的过滤，我们通过手工方式为google play商店创建一些特征。下面图表展示一个特征矩阵，每行表示一个App，每列表示一个特征。特征可以包含分类(例如教育、休闲、健康)，app的发布者以及其它的特征。简单点说，你可以认为这个特征工程是个二元的，一个非0值表示这个app有这个特征。<br><img src="matrix.png" alt="特征矩阵"><br><br>你同样使用相同的特征空间来表示用户，一些和用户相关的特征可以被用户显示的提供。例如：用户在他的档案(profile)里面选择了”娱乐APP”，其它的特征可以是隐式的，基于用户之前安装过的app。用户安装了一个Science R Us发布的其它app。<br>基于内容的模型应该推荐和用户相关的物品，为了能做到这样的推荐，你必须选择一个相似度度量（例如：点积）。然后你必须构建一个基于相似度度量的系统去为每一个推荐候选的物品打分，注意，这个推荐是特定针对这个用户的，因为这个模型没用使用任何其他用户的信息。</p><h2 id="使用点积作为相似度度量"><a href="#使用点积作为相似度度量" class="headerlink" title="使用点积作为相似度度量"></a>使用点积作为相似度度量</h2><p>考虑用户embedding x和物品embedding y同时是二元向量时，因为<br>根据点积公式<img src="dotproduct.png" alt="点积公式"><br>，一个特征同时存在x和y中时，那么公式的和就会加1，换句话说，x和y的点积就是同时在x和y的向量中出现的特征的个数。一个高的点积值代表更多共同的特征，也就是更高的相似度。</p><h2 id="自己试试"><a href="#自己试试" class="headerlink" title="自己试试"></a>自己试试</h2><p>根据上图计算每一个物品和用户的点积，使用计算的结果回答下面的问题：<br>你会推荐哪个app？<br>1、    Science R Us 创建的教育类的app<br>这是正确答案，这个物品和用户向量的点积最高，等于2。我们的这个用户的确喜欢科学和教育类app。<br>2、    Healthcare创建的健康类app<br>这个答案错误，这个app和用户点积值为1，这个不是系统生成的最差的推荐，但肯定不是最好的。<br>3、    TimeWastr创建的休闲app<br>这个答案错误，这个app和用户的点积值为0，我们的这个用户对游戏类的休闲app不感兴趣</p><h1 id="Advantages-amp-Disadvantages"><a href="#Advantages-amp-Disadvantages" class="headerlink" title="Advantages&amp;Disadvantages"></a>Advantages&amp;Disadvantages</h1><h2 id="Advantanges"><a href="#Advantanges" class="headerlink" title="Advantanges"></a>Advantanges</h2><p>基于内容的推荐不需要其他用户的数据，因为推荐就是针对这个用户的，因此它可以很容易的扩展到更多的用户。<br>这个模型能捕获用户特定的爱好，可以推荐很少有其他用户喜好的利基(niche)物品给用户。</p><h2 id="Disadvantages"><a href="#Disadvantages" class="headerlink" title="Disadvantages"></a>Disadvantages</h2><p>因为物品的特征表示某种程度上是通过手工来实现的，这个技术需要大量的专业领域知识。因此，这个模型只能很好的用于手工设计的特征。<br>这个模型只能基于用户已知的兴趣去推荐，换句话说，这个模型扩展用户已有兴趣的能力和很有限。</p><p><br><br>注：本文翻译自谷歌开发者文档<br><br>链接：<a href="https://developers.google.com/machine-learning/recommendation/content-based/basics" target="_blank" rel="noopener">https://developers.google.com/machine-learning/recommendation/content-based/basics</a></p>]]></content>
      
      
      <categories>
          
          <category> 推荐系统 </category>
          
          <category> Google Developer Recommendation Systems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐系统 </tag>
            
            <tag> Recommendation System </tag>
            
            <tag> 基于内容 </tag>
            
            <tag> Conten Based </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Theme-Snail</title>
      <link href="/2019/11/01/Hexo-Theme-Snail/"/>
      <url>/2019/11/01/Hexo-Theme-Snail/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-snail"><a href="#hexo-theme-snail" class="headerlink" title="hexo-theme-snail"></a>hexo-theme-snail</h1><p><a href="https://github.com/dusign/hexo-theme-snail" target="_blank" rel="noopener">View Hexo-Theme-Snail Sources On Github &#10174; </a></p><p><a href="https://www.dusign.net" target="_blank" rel="noopener">View Live Super Snail Blog &#10174;</a></p><p><img src="snail.png" alt="hexo-theme-snail"></p><p>Hexo-theme-snail is a succinct hexo theme. It has two colors, light and star, that can be set according to your own preferences in the settings, and also has the functions of sharing and commenting. More features are under development.</p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>light color theme and star theme</li><li>diversified comment system</li><li>notice tips</li><li>share to other platforms (under development)</li><li>picture sharing (under development)</li></ul><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="Setup-your-blog"><a href="#Setup-your-blog" class="headerlink" title="Setup your blog"></a>Setup your blog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure><h3 id="Installation-Theme"><a href="#Installation-Theme" class="headerlink" title="Installation Theme"></a>Installation Theme</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ rm -rf <span class="built_in">source</span></span><br><span class="line">$ rm _config.yml package.json README.md LICENSE</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/dusign/hexo-theme-snail.git</span><br><span class="line">$ mv ./hexo-theme-snail/snail ./themes</span><br><span class="line">$ mv ./hexo-theme-snail/* ./</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="Set-Theme"><a href="#Set-Theme" class="headerlink" title="Set Theme"></a>Set Theme</h3><p>Modify the value of <code>theme:</code> in <code>_config.yml</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">snail</span></span><br></pre></td></tr></table></figure></p><h3 id="Start-the-Server"><a href="#Start-the-Server" class="headerlink" title="Start the Server"></a>Start the Server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h3><p>Replace the following information with your own.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">At</span> <span class="string">the</span> <span class="string">bottom</span> <span class="string">of</span> <span class="string">the</span> <span class="string">well,</span> <span class="string">it</span> <span class="string">is</span> <span class="string">destined</span> <span class="string">to</span> <span class="string">see</span> <span class="string">only</span> <span class="string">the</span> <span class="string">sky</span> <span class="string">at</span> <span class="string">the</span> <span class="string">wellhead.</span> </span><br><span class="line">          <span class="string">However,</span> <span class="string">the</span> <span class="string">starting</span> <span class="string">point</span> <span class="string">only</span> <span class="string">affects</span> <span class="string">the</span> <span class="string">process</span> <span class="string">of</span> <span class="string">reaching</span> <span class="string">your</span> <span class="string">peak</span> <span class="string">and</span> <span class="string">does</span> <span class="string">not</span> <span class="string">determine</span> <span class="string">the</span> <span class="string">height</span> <span class="string">you</span> <span class="string">reach.</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Dusign</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure></p><h3 id="Site-Settings"><a href="#Site-Settings" class="headerlink" title="Site Settings"></a>Site Settings</h3><p>Put customized pictures in <code>img</code> directory.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site settings</span></span><br><span class="line"><span class="attr">SEOTitle:</span> <span class="string">Hexo-theme-snail</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">hexo-theme-snail@mail.com</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">"A hexo theme"</span></span><br><span class="line"><span class="attr">keyword:</span> <span class="string">"dusign, hexo-theme-snail"</span></span><br><span class="line"><span class="attr">header-img:</span> <span class="string">img/header_img/home-bg-1-dark.jpg</span></span><br><span class="line"><span class="attr">signature:</span> <span class="literal">true</span> <span class="comment">#show signature</span></span><br><span class="line"><span class="attr">signature-img:</span> <span class="string">img/signature/Just-do-it-white.png</span></span><br></pre></td></tr></table></figure></p><h3 id="SNS-Settings"><a href="#SNS-Settings" class="headerlink" title="SNS Settings"></a>SNS Settings</h3><p>If you don’t want to display it, you can delete it directly.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SNS settings</span></span><br><span class="line"><span class="attr">github_username:</span>    <span class="string">dusign</span></span><br><span class="line"><span class="attr">twitter_username:</span>   <span class="string">dusignr</span></span><br><span class="line"><span class="attr">facebook_username:</span>  <span class="string">Gang</span> <span class="string">Du</span></span><br><span class="line"><span class="attr">zhihu_username:</span> <span class="string">dusignr</span></span><br></pre></td></tr></table></figure></p><h3 id="Sidebar-Settings"><a href="#Sidebar-Settings" class="headerlink" title="Sidebar Settings"></a>Sidebar Settings</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="attr">sidebar:</span> <span class="literal">true</span>                      <span class="comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="attr">sidebar-about-description:</span> <span class="string">"Welcome to visit, I'm Dusign!"</span></span><br><span class="line"><span class="attr">sidebar-avatar:</span> <span class="string">img/ironman-draw.png</span>      <span class="comment"># use absolute URL, seeing it's used in both `/` and `/about/`</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">featured-tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">short-about</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent-posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends-blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># widget behavior</span></span><br><span class="line"><span class="comment">## Archive</span></span><br><span class="line"><span class="attr">archive_type:</span> <span class="string">'monthly'</span></span><br><span class="line"><span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Featured Tags</span></span><br><span class="line"><span class="attr">featured-tags:</span> <span class="literal">true</span>                     <span class="comment"># whether or not using Feature-Tags</span></span><br><span class="line"><span class="attr">featured-condition-size:</span> <span class="number">1</span>              <span class="comment"># A tag will be featured if the size of it is more than this condition value</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Friends</span></span><br><span class="line"><span class="attr">friends:</span> <span class="string">[</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Dusign's Blog"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"https://blog.csdn.net/d_Nail"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Dusign's Web"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"#"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Dusign's Github"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"https://github.com/dusign"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Other"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"#"</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">]</span></span><br></pre></td></tr></table></figure><h3 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">snail</span></span><br></pre></td></tr></table></figure><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">      <span class="attr">github:</span> <span class="string">github.repository.address</span></span><br><span class="line">      <span class="attr">coding:</span> <span class="string">coding.repository.address</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p>See httpymls://github.com/imsun/gitment for detailed configuration method.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comment</span></span><br><span class="line"><span class="comment">## This comment system is gitment</span></span><br><span class="line"><span class="comment">## gitment url: https://github.com/imsun/gitment</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">client_id:</span></span><br><span class="line">  <span class="attr">client_secret:</span></span><br></pre></td></tr></table></figure></p><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tip</span></span><br><span class="line"><span class="attr">tip:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">content:</span> <span class="string">欢迎访问</span> <span class="string">&lt;a</span> <span class="string">href="https://www.dusign.net"</span> <span class="string">target="dusign"&gt;dusign&lt;/a&gt;</span> <span class="string">的博客，博客系统一键分享的功能还在完善中，请大家耐心等待。</span></span><br><span class="line">          <span class="string">若有问题或者有好的建议欢迎留言，笔者看到之后会及时回复。</span></span><br><span class="line">          <span class="string">评论点赞需要github账号登录，如果没有账号的话请点击</span> </span><br><span class="line">          <span class="string">&lt;a</span> <span class="string">href="https://github.com"</span> <span class="string">target="view_window"</span> <span class="string">&gt;</span> <span class="string">github</span> <span class="string">&lt;/a&gt;</span> <span class="string">注册，</span> <span class="string">谢谢</span> <span class="string">!</span></span><br></pre></td></tr></table></figure><h3 id="Color-Sheme"><a href="#Color-Sheme" class="headerlink" title="Color Sheme"></a>Color Sheme</h3><p>Set the <code>enable</code> value of the desired color sheme to <code>true</code>. If the value of <code>bg_effects.star.enable</code> is <code>true</code>, please modify the value of <code>highlight_theme</code> in <code>./themes/snail/_config.yml</code> to <code>night</code>.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Color Sheme</span></span><br><span class="line"><span class="comment">## If there is no effect after modification, please empty the cache and try again.</span></span><br><span class="line"><span class="comment">## ⚠️ The following special effects will take up a lot of cpu resorces, please open it carefully.</span></span><br><span class="line"><span class="attr">bg_effects:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">color:</span> <span class="number">129</span><span class="string">,200,61</span></span><br><span class="line">    <span class="attr">pointColor:</span> <span class="number">129</span><span class="string">,200,61</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">zIndex:</span> <span class="number">-9</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">99</span></span><br><span class="line">  <span class="attr">mouse_click:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">'"🌱","just do it","🌾","🍀","don'</span><span class="string">'t give up","🍂","🌻","try it again","🍃","never say die","🌵","🌿","🌴"'</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">'"rgb(121,93,179)"</span></span><br><span class="line"><span class="string">          ,"rgb(76,180,231)"</span></span><br><span class="line"><span class="string">          ,"rgb(184,90,154)"</span></span><br><span class="line"><span class="string">          ,"rgb(157,211,250)"</span></span><br><span class="line"><span class="string">          ,"rgb(255,0,0)"</span></span><br><span class="line"><span class="string">          ,"rgb(242,153,29)"</span></span><br><span class="line"><span class="string">          ,"rgb(23,204,16)"</span></span><br><span class="line"><span class="string">          ,"rgb(222,0,0)"</span></span><br><span class="line"><span class="string">          ,"rgb(22,36,92)"</span></span><br><span class="line"><span class="string">          ,"rgb(127,24,116)"</span></span><br><span class="line"><span class="string">          ,"rgb(119,195,79)"</span></span><br><span class="line"><span class="string">          ,"rgb(4,77,34)"</span></span><br><span class="line"><span class="string">          ,"rgb(122,2,60)"'</span></span><br><span class="line">  <span class="attr">star:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="Releases"><a href="#Releases" class="headerlink" title="Releases"></a>Releases</h2><p>V1.0</p><ul><li>fix the bugs</li><li>add comment system</li><li>add notice tips</li><li>add star sheme</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Apache License 2.0 Copyright(c) 2018-2020 <a href="https://github.com/dusign" target="_blank" rel="noopener">Dusign</a>   </p><p><a href="https://github.com/dusign/hexo-theme-snail" target="_blank" rel="noopener">hexo-theme-snail</a> is derived from <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener">Huxpro</a> Apache License 2.0. Copyright (c) 2015-2020 Huxpro</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo-theme-snail </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
